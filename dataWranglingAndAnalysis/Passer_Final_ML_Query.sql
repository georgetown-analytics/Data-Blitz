SELECT 
PASSER_SEAS
, SUM(RUSH_YDS)
, AVG(RUSH_SUCCESS)
, SUM(RUSH_TD)
, SUM(FUMBLE)
FROM
(

SELECT 
PASSER.PNAME AS PASSER
, CONCAT(PASSER.PNAME, ', ', GAME.SEAS) AS PASSER_SEAS
, CASE WHEN PASSER_PRO_BOWL.PLAYER_ID IS NOT NULL
THEN 1
ELSE 0
END AS PASSER_PRO_BOWL

, CASE WHEN PASSER.DPOS > 0
THEN PASSER.DPOS
ELSE 256
END AS PASSER_DRAFT_SPOT
, CASE WHEN PASSER.DPOS > 0
THEN 1
ELSE 0
END AS PASSER_DRAFTED 

,TARGET.PNAME AS TARGET
,CASE WHEN PASS_FULL.LOC IN ('DL', 'DM', 'DR')
THEN 1
ELSE 0
END AS DEEP_PASS
,CASE WHEN PASS_FULL.LOC IN ('L', 'M', 'R', 'NL')
THEN 1
ELSE 0
END AS MED_PASS
,CASE WHEN PASS_FULL.LOC IN ('SL', 'SM', 'SR')
THEN 1
ELSE 0
END AS SHORT_PASS
, PASS_FULL.YDS
, 1 AS PASS_ATTEMPT
, PASS_FULL.COMP
, PASS_FULL.TD
, PASS_FULL.INTRCPT
, PASSER_RATING.PASS_RAT
, PASSER.HEIGHT AS PASSER_HGHT
, GAME.SEAS - RIGHT(PASSER.DOB,4) AS PASSER_AGE
, PASSER.START AS PASSER_CAREER_STRT
/*, GAME.SEAS - */
, TARGET.HEIGHT AS TGT_HGHT
, TARGET.WEIGHT AS TGT_WGHT
, CASE WHEN TARGET_PRO_BOWL.PLAYER_ID IS NOT NULL
THEN 1
ELSE 0
END AS TARGET_PRO_BOWL

, GAME.SEAS - RIGHT(TARGET.DOB,4) AS TGT_AGE
, CASE WHEN TARGET.DPOS IS NULL
THEN 256
WHEN TARGET.DPOS = 0
THEN 256
ELSE TARGET.DPOS
END AS TGT_DRAFT_SPOT
, CASE WHEN TARGET.DPOS > 0
THEN 1
ELSE 0
END AS TGT_DRAFTED 
, TARGET.START AS TGT_CAREER_STRT /*'USE TO FIGURE OUT YEARS IN LEAGUE'*/
, CASE WHEN TARGET.FORTY = 0
THEN ROUND(AVERAGE_FORTY.AVG_FORTY,3)
ELSE TARGET.FORTY
END AS TGT_FORTY
, CASE WHEN TARGET.VERTICAL = 0
THEN ROUND(AVERAGE_VERTICAL.AVG_VERT,3)
ELSE TARGET.VERTICAL
END AS TGT_VERT
, CASE WHEN TARGET.POS1 = 'RB'
THEN 1
ELSE 0
END AS RB_TGT
, CASE WHEN TARGET.POS1 = 'WR'
THEN 1
ELSE 0
END AS WR_TGT
, CASE WHEN TARGET.POS1 = 'TE'
THEN 1
ELSE 0
END AS TE_TGT
, CASE WHEN TARGET.POS1 <> 'RB'
AND TARGET.POS1 <> 'TE'
AND TARGET.POS1 <> 'WR'
THEN 1
ELSE 0
END AS TRICK_PLAY

/*,QTR
,MIN *//*'CAN BE USED FOR TWO MIN DRILL'*/
, YTG
, Case when PASS_FULL.YDS >= YTG
THEN 1
ELSE 0
END AS FIRST_DOWN_CONVERSION

, CASE WHEN ZONE = 5
THEN 1
ELSE 0
END AS RED_ZONE_ATTMPT /*'DEFINITION AVAILABLE'*/
, CASE WHEN ZONE = 5
THEN PASSER_RATING.PASS_RAT
ELSE NULL
END AS RED_ZONE_QB_RAT /*'DEFINITION AVAILABLE'*/
, CASE WHEN DWN = 4
AND PASS_FULL.YDS >= YTG
THEN 1
when DWN = 4
AND PASS_FULL.YDS < YTG
THEN 0
ELSE NULL
END
AS FOURTH_DOWN_SUCCESS
, CASE WHEN DWN = 3
AND PASS_FULL.YDS >= YTG
THEN 1
when DWN = 3
AND PASS_FULL.YDS < YTG
THEN 0
ELSE NULL
END
AS THIRD_DOWN_SUCCESS
, CASE WHEN QTR = 4
THEN PASSER_RATING.PASS_RAT
ELSE null
END AS FOURTH_QTR_PASS_RAT
, CASE WHEN SG = 'Y'
THEN 1 
ELSE 0
END as SHOTGUN
, CASE WHEN NH = 'Y'
THEN 1
ELSE 0
END AS  NO_HUDDLE
, CASE WHEN PENALTY.ACT IS NOT NULL
THEN 1
ELSE 0
END AS DEF_PENALTY_DCLND
,CASE WHEN PENALTY.ACT IS NOT NULL
THEN PASSER_RATING.PASS_RAT
ELSE NULL
END AS FREE_PLAY_PASS_RAT
, PENALTY.DESC as PENALTY_DESC
,GAME.SEAS
/* ,GAME.WK
,GAME.DAY
,GAME.V 'FIGURE OUT HOW TO DO HOME OR AWAY'
,GAME.H*/
/*HOW DO WE CALCULATE WHETHER THE PASSER IS AT HOME OR AWAY?*/
,GAME.TEMP
,GAME.HUMD
,GAME.WSPD
,case when COND IN ('Rain', 'Showers', 'Snow', 'Thunderstorms', 'Cold'
,'Flurries'
,'Light Rain'
,'Light Showers'
,'Light Snow'
,'Windy'
)
THEN 1
ELSE 0
END AS BAD_WEATH
, case when COND IN ('Chance Rain'
,'Clear'
,'Closed Roof'
,'Cloudy'
,'Covered Roof'
,'Dome'
,'Fair'
,'Foggy'
,'Hazy'
,'Mostly Cloudy'
,'Mostly Sunny'
,'Overcast'
,'Partly Cloudy'
,'Partly Sunny'
,'Sunny' )
THEN 1
WHEN COND IS NULL
THEN 1
ELSE 0
END AS GOOD_WEATH
,GAME.COND
, CASE WHEN GAME.COND = 'DOME'
THEN 1
ELSE 0
END AS DOME_GAME
, CASE WHEN GAME.SURF <> 'GRASS'
THEN 1
ELSE 0
END AS TURF_FIELD
, CASE WHEN POSTSEASON_RUN.FINAL_WK >17
THEN 1
ELSE 0
END AS POSTSEASON
,  CASE WHEN POSTSEASON_RUN.FINAL_WK >18
THEN 1
ELSE 0
END AS DIVISIONAL_APPEARANCE
, GAME.WK
, CASE 
WHEN PASSER_PRO_BOWL_PRIOR.PLAYER_ID IS NULL
THEN 0
ELSE 1
END AS PASSER_PRO_BOWL_LAST_YEAR
,NULL AS RUSH_YDS
,NULL AS RUSH_SUCCESS
, NULL AS RUSH_TD
, NULL AS FUMBLE
 FROM PBP
 INNER JOIN PASS_FULL
 ON PBP.PID = PASS_FULL.PID
left outer join GAME
ON PBP.GID = GAME.GID
LEFT OUTER JOIN PENALTY
ON PBP.PID = PENALTY.PID
AND PENALTY.CAT = '4'
AND PENALTY.ACT = 'D'
INNER JOIN PLAYER PASSER
ON PASS_FULL.PSR = PASSER.PLAYER
LEFT OUTER JOIN PLAYER TARGET
ON PASS_FULL.TRG = TARGET.PLAYER
LEFT OUTER JOIN PASSER_RATING
ON PASS_FULL.YDS = PASSER_RATING.YDS
AND PASS_FULL.COMP = PASSER_RATING.COMPL
AND PASS_FULL.TD = PASSER_RATING.TD
AND PASS_FULL.INTRCPT = PASSER_RATING.INTRCPT
LEFT OUTER JOIN (SELECT 
POS1
, AVG(FORTY) AS AVG_FORTY
,COUNT(*)
FROM PLAYER
WHERE FORTY > 0
GROUP BY 
POS1) AVERAGE_FORTY
ON TARGET.POS1 = AVERAGE_FORTY.POS1
LEFT OUTER JOIN
(SELECT 
POS1
, AVG(VERTICAL) AS AVG_VERT
,COUNT(*)
FROM PLAYER
WHERE VERTICAL > 0
GROUP BY 
POS1) AVERAGE_VERTICAL
ON TARGET.POS1 = AVERAGE_VERTICAL.POS1
LEFT OUTER JOIN PRO_BOWL PASSER_PRO_BOWL
ON GAME.SEAS = PASSER_PRO_BOWL.ProBowl_Year
AND PASSER.PLAYER = PASSER_PRO_BOWL.PLAYER_ID
LEFT OUTER JOIN PRO_BOWL PASSER_PRO_BOWL_PRIOR
ON (GAME.SEAS -1) = PASSER_PRO_BOWL_PRIOR.ProBowl_Year
AND PASSER.PLAYER = PASSER_PRO_BOWL_PRIOR.PLAYER_ID
LEFT OUTER JOIN PRO_BOWL TARGET_PRO_BOWL
ON GAME.SEAS = TARGET_PRO_BOWL.ProBowl_Year
AND TARGET.PLAYER = TARGET_PRO_BOWL.PLAYER_ID
LEFT OUTER JOIN
(SELECT SEAS, TEAM, MAX(FINAL_WK) AS FINAL_WK
FROM (
(SELECT SEAS, V AS TEAM, MAX(WK) AS FINAL_WK FROM GAME VISIT
GROUP BY SEAS, V) 
UNION
(SELECT SEAS, H AS TEAM, MAX(WK) AS FINAL_WK FROM GAME HOME
GROUP BY SEAS, H)
) WIN_RECORD
GROUP BY SEAS, TEAM) POSTSEASON_RUN
ON PBP.OFF = POSTSEASON_RUN.TEAM
AND GAME.SEAS = POSTSEASON_RUN.SEAS
WHERE PASS_FULL.SPK = 0


UNION ALL

SELECT 
RUSHER.PNAME AS PNAME

, CONCAT(RUSHER.PNAME, ', ', GAME.SEAS) AS PASSER_SEAS
, CASE WHEN RUSHER_PRO_BOWL.PLAYER_ID IS NOT NULL
THEN 1
ELSE 0
END AS PASSER_PRO_BOWL

, CASE WHEN RUSHER.DPOS > 0
THEN RUSHER.DPOS
ELSE 256
END AS PASSER_DRAFT_SPOT
, CASE WHEN RUSHER.DPOS > 0
THEN 1
ELSE 0
END AS PASSER_DRAFTED 

,NULL AS TARGET
,NULL AS DEEP_PASS
,NULL AS MED_PASS
,NULL AS SHORT_PASS
, NULL AS YDS
, NULL AS PASS_ATTEMPT
, NULL AS COMP
, NULL AS TD
, NULL AS INTRCPT
, NULL AS PASS_RAT
, RUSHER.HEIGHT AS PASSER_HGHT
, GAME.SEAS - RIGHT(RUSHER.DOB,4) AS PASSER_AGE
, RUSHER.START AS PASSER_CAREER_STRT
/*, GAME.SEAS - */
, NULL AS TGT_HGHT
, NULL AS TGT_WGHT
, NULL AS TARGET_PRO_BOWL

, NULL AS TGT_AGE
, NULL AS TGT_DRAFT_SPOT
, NULL AS TGT_DRAFTED 
, NULL AS TGT_CAREER_STRT /*'USE TO FIGURE OUT YEARS IN LEAGUE'*/
, NULL AS TGT_FORTY
, NULL AS TGT_VERT
, NULL AS RB_TGT
, NULL AS WR_TGT
, NULL AS TE_TGT
, NULL AS TRICK_PLAY

/*,QTR
,MIN *//*'CAN BE USED FOR TWO MIN DRILL'*/
, YTG
, Case when RUSH.YDS >= YTG
THEN 1
ELSE 0
END AS FIRST_DOWN_CONVERSION

, NULL AS RED_ZONE_ATTMPT /*'DEFINITION AVAILABLE'*/
, NULL AS RED_ZONE_QB_RAT /*'DEFINITION AVAILABLE'*/
, CASE WHEN DWN = 4
AND RUSH.YDS >= YTG
THEN 1
when DWN = 4
AND RUSH.YDS < YTG
THEN 0
ELSE NULL
END
AS FOURTH_DOWN_SUCCESS
, CASE WHEN DWN = 3
AND RUSH.YDS >= YTG
THEN 1
when DWN = 3
AND RUSH.YDS < YTG
THEN 0
ELSE NULL
END
AS THIRD_DOWN_SUCCESS
, NULL AS FOURTH_QTR_PASS_RAT
, CASE WHEN SG = 'Y'
THEN 1 
ELSE 0
END as SHOTGUN
, CASE WHEN NH = 'Y'
THEN 1
ELSE 0
END AS  NO_HUDDLE
, CASE WHEN PENALTY.ACT IS NOT NULL
THEN 1
ELSE 0
END AS DEF_PENALTY_DCLND
, NULL AS FREE_PLAY_PASS_RAT
, PENALTY.DESC as PENALTY_DESC
,GAME.SEAS
/* ,GAME.WK
,GAME.DAY
,GAME.V 'FIGURE OUT HOW TO DO HOME OR AWAY'
,GAME.H*/
/*HOW DO WE CALCULATE WHETHER THE PASSER IS AT HOME OR AWAY?*/
,GAME.TEMP
,GAME.HUMD
,GAME.WSPD
,case when COND IN ('Rain', 'Showers', 'Snow', 'Thunderstorms', 'Cold'
,'Flurries'
,'Light Rain'
,'Light Showers'
,'Light Snow'
,'Windy'
)
THEN 1
ELSE 0
END AS BAD_WEATH
, case when COND IN ('Chance Rain'
,'Clear'
,'Closed Roof'
,'Cloudy'
,'Covered Roof'
,'Dome'
,'Fair'
,'Foggy'
,'Hazy'
,'Mostly Cloudy'
,'Mostly Sunny'
,'Overcast'
,'Partly Cloudy'
,'Partly Sunny'
,'Sunny' )
THEN 1
WHEN COND IS NULL
THEN 1
ELSE 0
END AS GOOD_WEATH
,GAME.COND
, CASE WHEN GAME.COND = 'DOME'
THEN 1
ELSE 0
END AS DOME_GAME
, CASE WHEN GAME.SURF <> 'GRASS'
THEN 1
ELSE 0
END AS TURF_FIELD
, CASE WHEN GAME.WK >17
THEN 1
ELSE 0
END AS POSTSEASON
,  CASE WHEN GAME.WK >18
THEN 1
ELSE 0
END AS DIVISIONAL_APPEARANCE
, NULL AS WK
, NULL AS PASSER_PRO_BOWL_LAST_YEAR
,RUSH.YDS AS RUSH_YDS
,RUSH.SUCC AS RUSH_SUCCESS
, case when PBP.PTS >= 6
THEN 1
ELSE 0
END AS RUSH_TD
, CASE 
WHEN PBP.FUM = ''
THEN 0
WHEN PBP.FUM IS NOT NULL
THEN 1
ELSE 0
END AS FUMBLE
 FROM PBP
 INNER JOIN RUSH
 ON PBP.PID = RUSH.PID
LEFT OUTER JOIN PLAYER RUSHER
ON RUSH.BC = RUSHER.PLAYER
left outer join GAME
ON PBP.GID = GAME.GID
LEFT OUTER JOIN PRO_BOWL RUSHER_PRO_BOWL
ON GAME.SEAS = RUSHER_PRO_BOWL.ProBowl_Year
AND RUSHER_PRO_BOWL.PLAYER_ID = RUSH.BC
LEFT OUTER JOIN PENALTY
ON PBP.PID = PENALTY.PID
WHERE RUSH.KNE = 0
AND RUSHER.POS1 = 'QB'
/*AND WK <= 17*/
) FULL_DATA
GROUP BY PASSER_SEAS
;
